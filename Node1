============== BAI 1 ======================
npm init
	-> Tao file json luu tru cac thong tin co ban cua project.
	
npm install express --save
	+) --save: la de luu lai module express vao trong file package.json duoi 1 cai key la 'dependencies'
	
============== BAI 2 ======================
SPA - Single Page Application : web dong
	+) Noi dung duoc render phia front-end.
	+) Khong load lai toan bo trang.
	+) Tuong tac thong qua JSON API.

Template engines: file hien thi ra man hinh.
	+) Pug (co ban nhat)
	+) Mus
	+) ejs
	
npm install pug --save
	-> Cai dat va nhung Pug vao trong project.
	
=============== BAI 3 ======================
Query Parameters
B1: Nhap thong tin can tim
B2: Lay thong tin do gui len server qua method GET
B3: Kiem tra va so sanh gia tri query voi cai can tim.
B4: Render va tra ve ket qua ra man hinh.
	
	
=============== BAI 4 ======================	
BodyParser : de lay content ma client gui len.	

npm install body-parser --save

var bodyParser = require('body-parser');
app.use(bodyParser.json());	//for parsing application/json
app.use(bodyParser.urlencoded({ extended: true }));	//for parsing application/x-www-form-urlencoded

-> Doc noi dung client gui len: request.body ^^ 	
	

=============== BAI 5 ======================
Nodemon: la Monitor
	-> Tu dong restart chay server lai nhieu lan (node index.js) moi khi code duoc thay doi.
	
npm install --save-dev nodemon
	-> Them nodemon vao moi truong development.
**Luu y:
	+) Them "start" : "nodemon index.js"	 vao trong "script" o file fiile package.json.
	
	
	
=============== BAI 6 ======================
LowDB: co so du lieu sieu don gian luu tru du lieu duoi dang JSON.

npm install lowdb

//goi lowdb va tro duong truyen den
const low = require('lowdb')	// goi lowdb ra su dung.
const FileSync = require('lowdb/adapters/FileSync')

const adapter = new FileSync('db.json') //tro den databast db.json.
const db = low(adapter)	// bien dai dien cua db trong code js.

db.defaults({ users: [] }).write(); //dat mac dinh cho users khi chua co du lieu.

// them file nay de khi du lieu trong db thay doi thi nodemon khong phai restart lai nhieu lan.

=============== BAI 7 ======================
Route parameters - tham so truyen vao tren url.

vi du:	
Route path: /users/:userId/books/:bookId 
	-> sau dau :<thamso> tren url la am chi 1 gia tri bat ki nao do.


Request URL: http://localhost:3000/users/34/books/8989
	(:userd = 34 , :bookId = 8989)
req.params: { "userId": "34", "bookId": "8989" }

**Luu y: Route params khac voi Query params
	=> Lay gia tri client gui len.
		+) var q = req.param.u		(:u tren url - Route)
		+) var q = req.query.v		(http:.../send?v=..  - Query)
		
		
ShortId: tao ID ngau nhien
npm install shortid --save


=============== BAI 8-9 ======================
Route: noi chua cac link url lien ket.
MVC: model - view - controller.
	+) Model: noi luu tru du lieu (db.json)
	+) View: noi xu ly cac tac vu ben phia client.
	+) Controller: noi xu ly cac tac vu logic ben phia server.
	

=============== BAI 10 ======================
Template Layout: giao dien man hinh.

Bootstrap: framework css va js


=============== BAI 11 ======================
Static files: file tinh~.
	-> Nen su dung cac duong dan tuyet doi voi cac file tinh.


=============== BAI 13 ======================
Middleware: la <Ham1> chay truoc roi <Ham2> moi duoc chay.

function Middleware('..link..', func1, func2) {	//func1 chay xong -> thi func2 moi duoc chay
	...
}


=============== BAI 14 ======================
Cookie: duoc luu o brower.
	+) Khi request den 1 server -> thi Server response kem theo cookie.
	+) Cookie duoc luu lai ben phia Client.
	+) Lan 2 client request den server thi gui kem theo cookie.

npm install cookie-parser : de su dung lay gia tri cookie.


=============== BAI 15 ======================
Authenticatioin: xac thuc.

Xac thuc tai khoan va mat khau truoc khi login vao server de truy cap den cac muc khac.
+) Xac thuc Cookies, tai khoan, mat khau, ... -> truoc khi vao he thong.


=============== BAI 16 ======================
md5: 'ma hoa' password

npm install md5 --save
	-> de nhung thu vien md5 vao project.
su dung: 
	var md5 = require('md5');
	md5(message)	-> ma hoa 'message'


=============== BAI 17 ======================
Signed Cookie: dam bao gia tri cookie khong bi thay doi.

res.locals	: chi ton tai o vong doi req-res do thoi.
		(nghia la trong 1 cau lenh gui di - tra ve).

+) req.signedCookies.userId
+) app.use(cookieParser("secret"))
+) res.cookie('userId', user.id, {
		signed: true
	});


=============== BAI 18 ======================
Environment Variables: moi truong.
1. Dev Enviroment	- chay tren local.
2. Staging Enviroment	- de cho moi nguoi trong project co the nhin thay.
3. Production Enviroment	- cho moi nguoi dung.

npm install dotenv --save

goi file env cang som cang tot -> de o dau chuong trinh.


=============== BAI 19 ======================
Debug: diet bo - sua loi.
	+) Bug: bo hay loi.

Them: --inspect vao trong nodemon o file package.js
	-> Khi start chuong trinh thi debug o chrome (hinh thoi).
	
	
=============== BAI 20 ======================
Pagination: Phan trang.
	+) views/products/index.pug
	+) routes/product.route.js
	+) controllers/product.controller.js

Co: n la so Page thu n, x la phan tu trong 1 page.
	begin = (n-1)*x
	end = (n-1)*x+x = n*x
	Items = array.slice(begin, end) //begin -> end-1

Mockaroo: tao db mau.

Tu tim hieu: thu vien Lodash - dung nhieu khi di lam.


=============== BAI 21 ======================
File Upload: 

+)enctype
+)multer: giup doc du lieu tu request. (nhu tep anh, file da dung)
+)upload: thu muc chua cac file anh.
	var upload = multer({dest: './public/upload'});


=============== BAI 22 ======================
Session: duoc luu ben phia server.
	+) ung dung khi nguoi dung khong phai dang nhap.
	+) duoc ung dung tao gio hang, de luu tru cac id cua san pham.

Hoat dong:
	1. Kiem tra SessionId.
		- Ton tai thi next().
		- Khong ton tai thi:
			+) tao SessionId va luu lai tam thoi trong CSDL.
			+) gui SessionId ve phia nguoi dung.
	2. Moi khi User thuc hien 1 thao tac can luu tru thi goi kem theo session.
	3. Luu tru cac san pham can cho vao gio hang:
		- Su dung productId de luu tru san pham.
		- Them so luong lua chon san pham de luu tru.

Cookie: duoc luu ben phia client.
	+) ung dung khi nguoi dung khong phai dang nhap lai nhieu lan.
	+) server se kiem tra cookie user khi truy cap den 1 chuc nang hay tac vu bat ki.


=============== BAI 23 ======================
CSRF Attack (Cross-site request forgery)

Ung dung: hack chuyen tien. - gia mao form chuyen tien.
*Transfer money form (form chuyen tien)

+) Attacker: hacker mu den.
+) Victim: nguoi bi hack.


=============== BAI 24 ======================
MongDB:
mongo				(de start)
> show databases;
	Hien thi cac database hien co.
	
> use express-demo; 		(use database)
	Truy cap den database can truy van.
	
> show collectionis;
	Hien thi thong tin cac collection (<=> nhu 1 bang trong SQL)
>^C


Robo3T
-Create: tao lien ket (collect).
	+)Name: Localhost
	+)Address: localhost	port:27017
	
-Create Database:
	+)Database Name: express-demo
		Collection: <=> key ("users", "products", "session") trong db.json
			click right -> insert Doc... -> import "key" : "value"
			
			
=============== BAI 25 ======================
Mongoose: thu vien cua MongoDB
Tro den thu muc chua project -> npm install mongoose --save
Thay the lowdb -> Mongodb


+) mongoose.schema({...})	: dung de khai bao cac kieu du lieu cua key.




=============== BAI 26 ======================
API : Application Programming Interface (ung dung vs ung dung)
GUI : Graphuc User Interface		(nguoi dung vs ung dung)
CLI: Command Line Interface		(giao dien dong lenh)		

HTTP API:
- tra ve 2 dang chinh la: XML hoac JSON.
- su dung Postman de test API.










